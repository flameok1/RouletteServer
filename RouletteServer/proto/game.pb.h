// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: game.proto
// Protobuf C++ Version: 5.29.5

#ifndef game_2eproto_2epb_2eh
#define game_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/runtime_version.h"
#if PROTOBUF_VERSION != 5029005
#error "Protobuf C++ gencode is built with an incompatible version of"
#error "Protobuf C++ headers/runtime. See"
#error "https://protobuf.dev/support/cross-version-runtime-guarantee/#cpp"
#endif
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/message_lite.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/unknown_field_set.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_game_2eproto

namespace google {
namespace protobuf {
namespace internal {
template <typename T>
::absl::string_view GetAnyMessageName();
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_game_2eproto {
  static const ::uint32_t offsets[];
};
extern const ::google::protobuf::internal::DescriptorTable
    descriptor_table_game_2eproto;
namespace gamepackage {
class BetRequest;
struct BetRequestDefaultTypeInternal;
extern BetRequestDefaultTypeInternal _BetRequest_default_instance_;
class BetResponse;
struct BetResponseDefaultTypeInternal;
extern BetResponseDefaultTypeInternal _BetResponse_default_instance_;
class BetResult;
struct BetResultDefaultTypeInternal;
extern BetResultDefaultTypeInternal _BetResult_default_instance_;
class CountDownSync;
struct CountDownSyncDefaultTypeInternal;
extern CountDownSyncDefaultTypeInternal _CountDownSync_default_instance_;
class StartRequest;
struct StartRequestDefaultTypeInternal;
extern StartRequestDefaultTypeInternal _StartRequest_default_instance_;
}  // namespace gamepackage
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

namespace gamepackage {

// ===================================================================


// -------------------------------------------------------------------

class StartRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:gamepackage.StartRequest) */ {
 public:
  inline StartRequest() : StartRequest(nullptr) {}
  ~StartRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(StartRequest* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(StartRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR StartRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline StartRequest(const StartRequest& from) : StartRequest(nullptr, from) {}
  inline StartRequest(StartRequest&& from) noexcept
      : StartRequest(nullptr, std::move(from)) {}
  inline StartRequest& operator=(const StartRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline StartRequest& operator=(StartRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const StartRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const StartRequest* internal_default_instance() {
    return reinterpret_cast<const StartRequest*>(
        &_StartRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 0;
  friend void swap(StartRequest& a, StartRequest& b) { a.Swap(&b); }
  inline void Swap(StartRequest* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(StartRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  StartRequest* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<StartRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const StartRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const StartRequest& from) { StartRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(StartRequest* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "gamepackage.StartRequest"; }

 protected:
  explicit StartRequest(::google::protobuf::Arena* arena);
  StartRequest(::google::protobuf::Arena* arena, const StartRequest& from);
  StartRequest(::google::protobuf::Arena* arena, StartRequest&& from) noexcept
      : StartRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kPlayermoneyFieldNumber = 1,
  };
  // int32 playermoney = 1;
  void clear_playermoney() ;
  ::int32_t playermoney() const;
  void set_playermoney(::int32_t value);

  private:
  ::int32_t _internal_playermoney() const;
  void _internal_set_playermoney(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:gamepackage.StartRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const StartRequest& from_msg);
    ::int32_t playermoney_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_game_2eproto;
};
// -------------------------------------------------------------------

class CountDownSync final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:gamepackage.CountDownSync) */ {
 public:
  inline CountDownSync() : CountDownSync(nullptr) {}
  ~CountDownSync() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(CountDownSync* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(CountDownSync));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR CountDownSync(
      ::google::protobuf::internal::ConstantInitialized);

  inline CountDownSync(const CountDownSync& from) : CountDownSync(nullptr, from) {}
  inline CountDownSync(CountDownSync&& from) noexcept
      : CountDownSync(nullptr, std::move(from)) {}
  inline CountDownSync& operator=(const CountDownSync& from) {
    CopyFrom(from);
    return *this;
  }
  inline CountDownSync& operator=(CountDownSync&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CountDownSync& default_instance() {
    return *internal_default_instance();
  }
  static inline const CountDownSync* internal_default_instance() {
    return reinterpret_cast<const CountDownSync*>(
        &_CountDownSync_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 1;
  friend void swap(CountDownSync& a, CountDownSync& b) { a.Swap(&b); }
  inline void Swap(CountDownSync* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CountDownSync* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CountDownSync* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<CountDownSync>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const CountDownSync& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const CountDownSync& from) { CountDownSync::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(CountDownSync* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "gamepackage.CountDownSync"; }

 protected:
  explicit CountDownSync(::google::protobuf::Arena* arena);
  CountDownSync(::google::protobuf::Arena* arena, const CountDownSync& from);
  CountDownSync(::google::protobuf::Arena* arena, CountDownSync&& from) noexcept
      : CountDownSync(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kCountdownFieldNumber = 1,
    kRoundFieldNumber = 2,
  };
  // int32 countdown = 1;
  void clear_countdown() ;
  ::int32_t countdown() const;
  void set_countdown(::int32_t value);

  private:
  ::int32_t _internal_countdown() const;
  void _internal_set_countdown(::int32_t value);

  public:
  // int32 round = 2;
  void clear_round() ;
  ::int32_t round() const;
  void set_round(::int32_t value);

  private:
  ::int32_t _internal_round() const;
  void _internal_set_round(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:gamepackage.CountDownSync)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const CountDownSync& from_msg);
    ::int32_t countdown_;
    ::int32_t round_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_game_2eproto;
};
// -------------------------------------------------------------------

class BetResult final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:gamepackage.BetResult) */ {
 public:
  inline BetResult() : BetResult(nullptr) {}
  ~BetResult() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(BetResult* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(BetResult));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR BetResult(
      ::google::protobuf::internal::ConstantInitialized);

  inline BetResult(const BetResult& from) : BetResult(nullptr, from) {}
  inline BetResult(BetResult&& from) noexcept
      : BetResult(nullptr, std::move(from)) {}
  inline BetResult& operator=(const BetResult& from) {
    CopyFrom(from);
    return *this;
  }
  inline BetResult& operator=(BetResult&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const BetResult& default_instance() {
    return *internal_default_instance();
  }
  static inline const BetResult* internal_default_instance() {
    return reinterpret_cast<const BetResult*>(
        &_BetResult_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 4;
  friend void swap(BetResult& a, BetResult& b) { a.Swap(&b); }
  inline void Swap(BetResult* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(BetResult* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  BetResult* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<BetResult>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const BetResult& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const BetResult& from) { BetResult::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(BetResult* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "gamepackage.BetResult"; }

 protected:
  explicit BetResult(::google::protobuf::Arena* arena);
  BetResult(::google::protobuf::Arena* arena, const BetResult& from);
  BetResult(::google::protobuf::Arena* arena, BetResult&& from) noexcept
      : BetResult(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kPlayermoneyFieldNumber = 1,
    kWinnumFieldNumber = 2,
  };
  // int32 playermoney = 1;
  void clear_playermoney() ;
  ::int32_t playermoney() const;
  void set_playermoney(::int32_t value);

  private:
  ::int32_t _internal_playermoney() const;
  void _internal_set_playermoney(::int32_t value);

  public:
  // int32 winnum = 2;
  void clear_winnum() ;
  ::int32_t winnum() const;
  void set_winnum(::int32_t value);

  private:
  ::int32_t _internal_winnum() const;
  void _internal_set_winnum(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:gamepackage.BetResult)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const BetResult& from_msg);
    ::int32_t playermoney_;
    ::int32_t winnum_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_game_2eproto;
};
// -------------------------------------------------------------------

class BetResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:gamepackage.BetResponse) */ {
 public:
  inline BetResponse() : BetResponse(nullptr) {}
  ~BetResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(BetResponse* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(BetResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR BetResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline BetResponse(const BetResponse& from) : BetResponse(nullptr, from) {}
  inline BetResponse(BetResponse&& from) noexcept
      : BetResponse(nullptr, std::move(from)) {}
  inline BetResponse& operator=(const BetResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline BetResponse& operator=(BetResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const BetResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const BetResponse* internal_default_instance() {
    return reinterpret_cast<const BetResponse*>(
        &_BetResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 3;
  friend void swap(BetResponse& a, BetResponse& b) { a.Swap(&b); }
  inline void Swap(BetResponse* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(BetResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  BetResponse* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<BetResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const BetResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const BetResponse& from) { BetResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(BetResponse* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "gamepackage.BetResponse"; }

 protected:
  explicit BetResponse(::google::protobuf::Arena* arena);
  BetResponse(::google::protobuf::Arena* arena, const BetResponse& from);
  BetResponse(::google::protobuf::Arena* arena, BetResponse&& from) noexcept
      : BetResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kBetnumFieldNumber = 1,
    kAmountFieldNumber = 2,
    kPlayermoneyFieldNumber = 3,
  };
  // int32 betnum = 1;
  void clear_betnum() ;
  ::int32_t betnum() const;
  void set_betnum(::int32_t value);

  private:
  ::int32_t _internal_betnum() const;
  void _internal_set_betnum(::int32_t value);

  public:
  // int32 amount = 2;
  void clear_amount() ;
  ::int32_t amount() const;
  void set_amount(::int32_t value);

  private:
  ::int32_t _internal_amount() const;
  void _internal_set_amount(::int32_t value);

  public:
  // int32 playermoney = 3;
  void clear_playermoney() ;
  ::int32_t playermoney() const;
  void set_playermoney(::int32_t value);

  private:
  ::int32_t _internal_playermoney() const;
  void _internal_set_playermoney(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:gamepackage.BetResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 3, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const BetResponse& from_msg);
    ::int32_t betnum_;
    ::int32_t amount_;
    ::int32_t playermoney_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_game_2eproto;
};
// -------------------------------------------------------------------

class BetRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:gamepackage.BetRequest) */ {
 public:
  inline BetRequest() : BetRequest(nullptr) {}
  ~BetRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(BetRequest* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(BetRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR BetRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline BetRequest(const BetRequest& from) : BetRequest(nullptr, from) {}
  inline BetRequest(BetRequest&& from) noexcept
      : BetRequest(nullptr, std::move(from)) {}
  inline BetRequest& operator=(const BetRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline BetRequest& operator=(BetRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const BetRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const BetRequest* internal_default_instance() {
    return reinterpret_cast<const BetRequest*>(
        &_BetRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 2;
  friend void swap(BetRequest& a, BetRequest& b) { a.Swap(&b); }
  inline void Swap(BetRequest* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(BetRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  BetRequest* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<BetRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const BetRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const BetRequest& from) { BetRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(BetRequest* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "gamepackage.BetRequest"; }

 protected:
  explicit BetRequest(::google::protobuf::Arena* arena);
  BetRequest(::google::protobuf::Arena* arena, const BetRequest& from);
  BetRequest(::google::protobuf::Arena* arena, BetRequest&& from) noexcept
      : BetRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kBetnumFieldNumber = 1,
    kAmountFieldNumber = 2,
  };
  // int32 betnum = 1;
  void clear_betnum() ;
  ::int32_t betnum() const;
  void set_betnum(::int32_t value);

  private:
  ::int32_t _internal_betnum() const;
  void _internal_set_betnum(::int32_t value);

  public:
  // int32 amount = 2;
  void clear_amount() ;
  ::int32_t amount() const;
  void set_amount(::int32_t value);

  private:
  ::int32_t _internal_amount() const;
  void _internal_set_amount(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:gamepackage.BetRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const BetRequest& from_msg);
    ::int32_t betnum_;
    ::int32_t amount_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_game_2eproto;
};

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// StartRequest

// int32 playermoney = 1;
inline void StartRequest::clear_playermoney() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.playermoney_ = 0;
}
inline ::int32_t StartRequest::playermoney() const {
  // @@protoc_insertion_point(field_get:gamepackage.StartRequest.playermoney)
  return _internal_playermoney();
}
inline void StartRequest::set_playermoney(::int32_t value) {
  _internal_set_playermoney(value);
  // @@protoc_insertion_point(field_set:gamepackage.StartRequest.playermoney)
}
inline ::int32_t StartRequest::_internal_playermoney() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.playermoney_;
}
inline void StartRequest::_internal_set_playermoney(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.playermoney_ = value;
}

// -------------------------------------------------------------------

// CountDownSync

// int32 countdown = 1;
inline void CountDownSync::clear_countdown() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.countdown_ = 0;
}
inline ::int32_t CountDownSync::countdown() const {
  // @@protoc_insertion_point(field_get:gamepackage.CountDownSync.countdown)
  return _internal_countdown();
}
inline void CountDownSync::set_countdown(::int32_t value) {
  _internal_set_countdown(value);
  // @@protoc_insertion_point(field_set:gamepackage.CountDownSync.countdown)
}
inline ::int32_t CountDownSync::_internal_countdown() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.countdown_;
}
inline void CountDownSync::_internal_set_countdown(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.countdown_ = value;
}

// int32 round = 2;
inline void CountDownSync::clear_round() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.round_ = 0;
}
inline ::int32_t CountDownSync::round() const {
  // @@protoc_insertion_point(field_get:gamepackage.CountDownSync.round)
  return _internal_round();
}
inline void CountDownSync::set_round(::int32_t value) {
  _internal_set_round(value);
  // @@protoc_insertion_point(field_set:gamepackage.CountDownSync.round)
}
inline ::int32_t CountDownSync::_internal_round() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.round_;
}
inline void CountDownSync::_internal_set_round(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.round_ = value;
}

// -------------------------------------------------------------------

// BetRequest

// int32 betnum = 1;
inline void BetRequest::clear_betnum() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.betnum_ = 0;
}
inline ::int32_t BetRequest::betnum() const {
  // @@protoc_insertion_point(field_get:gamepackage.BetRequest.betnum)
  return _internal_betnum();
}
inline void BetRequest::set_betnum(::int32_t value) {
  _internal_set_betnum(value);
  // @@protoc_insertion_point(field_set:gamepackage.BetRequest.betnum)
}
inline ::int32_t BetRequest::_internal_betnum() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.betnum_;
}
inline void BetRequest::_internal_set_betnum(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.betnum_ = value;
}

// int32 amount = 2;
inline void BetRequest::clear_amount() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.amount_ = 0;
}
inline ::int32_t BetRequest::amount() const {
  // @@protoc_insertion_point(field_get:gamepackage.BetRequest.amount)
  return _internal_amount();
}
inline void BetRequest::set_amount(::int32_t value) {
  _internal_set_amount(value);
  // @@protoc_insertion_point(field_set:gamepackage.BetRequest.amount)
}
inline ::int32_t BetRequest::_internal_amount() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.amount_;
}
inline void BetRequest::_internal_set_amount(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.amount_ = value;
}

// -------------------------------------------------------------------

// BetResponse

// int32 betnum = 1;
inline void BetResponse::clear_betnum() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.betnum_ = 0;
}
inline ::int32_t BetResponse::betnum() const {
  // @@protoc_insertion_point(field_get:gamepackage.BetResponse.betnum)
  return _internal_betnum();
}
inline void BetResponse::set_betnum(::int32_t value) {
  _internal_set_betnum(value);
  // @@protoc_insertion_point(field_set:gamepackage.BetResponse.betnum)
}
inline ::int32_t BetResponse::_internal_betnum() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.betnum_;
}
inline void BetResponse::_internal_set_betnum(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.betnum_ = value;
}

// int32 amount = 2;
inline void BetResponse::clear_amount() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.amount_ = 0;
}
inline ::int32_t BetResponse::amount() const {
  // @@protoc_insertion_point(field_get:gamepackage.BetResponse.amount)
  return _internal_amount();
}
inline void BetResponse::set_amount(::int32_t value) {
  _internal_set_amount(value);
  // @@protoc_insertion_point(field_set:gamepackage.BetResponse.amount)
}
inline ::int32_t BetResponse::_internal_amount() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.amount_;
}
inline void BetResponse::_internal_set_amount(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.amount_ = value;
}

// int32 playermoney = 3;
inline void BetResponse::clear_playermoney() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.playermoney_ = 0;
}
inline ::int32_t BetResponse::playermoney() const {
  // @@protoc_insertion_point(field_get:gamepackage.BetResponse.playermoney)
  return _internal_playermoney();
}
inline void BetResponse::set_playermoney(::int32_t value) {
  _internal_set_playermoney(value);
  // @@protoc_insertion_point(field_set:gamepackage.BetResponse.playermoney)
}
inline ::int32_t BetResponse::_internal_playermoney() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.playermoney_;
}
inline void BetResponse::_internal_set_playermoney(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.playermoney_ = value;
}

// -------------------------------------------------------------------

// BetResult

// int32 playermoney = 1;
inline void BetResult::clear_playermoney() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.playermoney_ = 0;
}
inline ::int32_t BetResult::playermoney() const {
  // @@protoc_insertion_point(field_get:gamepackage.BetResult.playermoney)
  return _internal_playermoney();
}
inline void BetResult::set_playermoney(::int32_t value) {
  _internal_set_playermoney(value);
  // @@protoc_insertion_point(field_set:gamepackage.BetResult.playermoney)
}
inline ::int32_t BetResult::_internal_playermoney() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.playermoney_;
}
inline void BetResult::_internal_set_playermoney(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.playermoney_ = value;
}

// int32 winnum = 2;
inline void BetResult::clear_winnum() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.winnum_ = 0;
}
inline ::int32_t BetResult::winnum() const {
  // @@protoc_insertion_point(field_get:gamepackage.BetResult.winnum)
  return _internal_winnum();
}
inline void BetResult::set_winnum(::int32_t value) {
  _internal_set_winnum(value);
  // @@protoc_insertion_point(field_set:gamepackage.BetResult.winnum)
}
inline ::int32_t BetResult::_internal_winnum() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.winnum_;
}
inline void BetResult::_internal_set_winnum(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.winnum_ = value;
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace gamepackage


// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // game_2eproto_2epb_2eh
